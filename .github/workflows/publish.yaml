name: publish

on: 
  pull_request:
    branches:
      - main
  push:
    branches:
      - web_apps

env:
  IMAGE_ML_APP: app-ml
  IMAGE_ML_WEB: app-web

jobs:
  publish-docker-image-github:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.github_token }}
      - name: Set up vars
        run: |
          REPO="$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')"
          echo "IMAGE=ghcr.io/${REPO}:${{ github.sha }}" >> $GITHUB_ENV     
      - name: Build the Docker image
        run: |
          docker build . --tag ${{ env.IMAGE }}
          docker run ${{ env.IMAGE }}
          docker push ${{ env.IMAGE }}

  build-and-push-app-ml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: app-ml/
          file: app-ml/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_ML_APP }}:latest    
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_ML_APP }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_ML_APP }}:buildcache,mode=max

  build-and-push-app-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: app-web/
          file: app-web/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_ML_WEB }}:latest    
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_ML_WEB }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_ML_WEB }}:buildcache,mode=max

  build-and-push-app-ml-cli-comands:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up vars
        run: |
          echo "IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/${{env.IMAGE_ML_APP}}" >> $GITHUB_ENV  

      - name: Login 
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build 
        run: |
          docker build --tag ${{env.IMAGE}}:latest ./${{IMAGE_ML_APP}}
      - name: Push 
        run: |
          docker push ${{env.IMAGE}}:latest
      - name: Run ok
        run: |
          docker run --rm --name ${{IMAGE_ML_APP}}-test-run ${{env.IMAGE}}:latest

